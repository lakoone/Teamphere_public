version: '3.8'

services:
  backend:
    build:
      context: ./backend/teamphere
    env_file:
      - ./backend/teamphere/.env
    container_name: backend
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/teamphere/src:/app/src
      - ./backend/teamphere/prisma:/app/prisma
    networks:
      - mynetwork
  worker:
    build:
      context: ./backend/teamphere
    env_file:
      - ./backend/teamphere/.env
    depends_on:
      - redis
    volumes:
      - ./backend/teamphere/src:/app/src
      - ./backend/teamphere/prisma:/app/prisma
    networks:
      - mynetwork
    command: npm run startWorker
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mynetwork
  frontend:
     env_file:
       - ./frontend/.env.local
     build:
       context: ./frontend
     volumes:
       - ./frontend/src:/src
     ports:
       - "3000:3000"
     container_name: frontend
     networks:
       - mynetwork

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: DB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: some@email.com
      PGADMIN_DEFAULT_PASSWORD: somePass
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  pgdata:
  redis-data:
